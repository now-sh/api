<div class="hero fade-in">
    <h1>My GitHub Data</h1>
    <p class="lead">View my GitHub profile, repositories, and organizations</p>
</div>

<div class="row">
    <div class="col-md-8 mx-auto">
        <div class="card">
            <h2 class="card-title">My GitHub Profile</h2>
            <p class="card-text">GitHub profile, repositories, and organizations</p>
            
            <!-- Quick Access buttons at top -->
            <div class="btn-group mb-4">
                <form method="POST" action="/data/git" class="d-inline">
                    <input type="hidden" name="dataType" value="user">
                    <button type="submit" class="btn btn-info">
                        <i class="bi bi-person"></i> Profile
                    </button>
                </form>
                <form method="POST" action="/data/git" class="d-inline">
                    <input type="hidden" name="dataType" value="repos">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-folder"></i> Repositories
                    </button>
                </form>
                <form method="POST" action="/data/git" class="d-inline">
                    <input type="hidden" name="dataType" value="orgs">
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-building"></i> Organizations
                    </button>
                </form>
            </div>
            
            <!-- Auto-loaded GitHub data -->
            <% if (typeof pageData !== 'undefined' && pageData) { %>
                <div class="github-profile">
                    <div class="profile-header">
                        <img src="<%= pageData.avatar_url %>" alt="<%= pageData.login %>" class="avatar">
                        <div class="profile-info">
                            <h4><%= pageData.name || pageData.login %></h4>
                            <p class="text-muted">@<%= pageData.login %></p>
                            <% if (pageData.bio) { %><p><%= pageData.bio %></p><% } %>
                        </div>
                    </div>
                    <div class="profile-stats">
                        <div class="stat">
                            <strong><%= pageData.public_repos %></strong>
                            <span>Repositories</span>
                        </div>
                        <div class="stat">
                            <strong><%= pageData.followers %></strong>
                            <span>Followers</span>
                        </div>
                        <div class="stat">
                            <strong><%= pageData.following %></strong>
                            <span>Following</span>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <div class="loading-state">
                    <p>Loading GitHub profile data...</p>
                </div>
            <% } %>
        </div>

        <!-- API endpoints info -->
        <div class="card mt-4">
            <h3 class="card-title">API Endpoints</h3>
            <div class="code-block">
                <h4>Get user profile:</h4>
                <pre><code>curl -q -LSsf <%= baseUrl %>/api/v1/social/github/user/octocat</code></pre>
            </div>
            <div class="code-block">
                <h4>Get user repositories:</h4>
                <pre><code>curl -q -LSsf <%= baseUrl %>/api/v1/social/github/users/octocat/repos</code></pre>
            </div>
            <div class="code-block">
                <h4>My GitHub data:</h4>
                <pre><code>curl -q -LSsf <%= baseUrl %>/api/v1/me/info/github</code></pre>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('gitForm');
    const resultDiv = document.getElementById('gitForm-result');
    const resultOutput = resultDiv.querySelector('.result-output');
    
    // Form submission
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        e.stopPropagation();
        
        const username = form.username.value || 'casjay';
        const dataType = form.dataType.value;
        
        await window.fetchGitHubData(username, dataType);
    });
    
    // Auto-load my profile on page load
    setTimeout(() => {
        console.log('Auto-loading profile...');
        window.loadMyProfile();
    }, 100);
});

// Make fetchGitHubData available globally
window.fetchGitHubData = async function(username, dataType) {
    const resultDiv = document.getElementById('gitForm-result');
    const resultOutput = resultDiv.querySelector('.result-output');
    
    resultOutput.innerHTML = '<div class="loading">Loading GitHub data...</div>';
    resultDiv.style.display = 'block';
    
    try {
        let url;
        if (username === 'casjay') {
            // Use personal endpoints
            if (dataType === 'repos') {
                url = '/api/v1/me/info/github/repos';
            } else if (dataType === 'orgs') {
                url = '/api/v1/me/info/github/orgs';
            } else {
                url = '/api/v1/me/info/github';
            }
        } else {
            // Use social endpoints (corrected paths)
            if (dataType === 'repos') {
                url = `/api/v1/social/github/repos/${username}`;
            } else if (dataType === 'orgs') {
                url = `/api/v1/social/github/orgs/${username}`;
            } else {
                url = `/api/v1/social/github/user/${username}`;
            }
        }
        
        console.log('Fetching:', url);
        const response = await fetch(url);
        console.log('Response status:', response.status);
        const data = await response.json();
        
        if (response.ok) {
            window.displayGitHubData(data, dataType);
            resultDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        } else {
            resultOutput.innerHTML = `<div class="error">Error: ${data.error || 'Failed to fetch data'}</div>`;
        }
    } catch (error) {
        console.error('GitHub API Error:', error);
        resultOutput.innerHTML = `<div class="error">Error: ${error.message || 'Network error occurred'}</div>`;
    }
};

// Make displayGitHubData available globally
window.displayGitHubData = function(data, dataType) {
    const resultDiv = document.getElementById('gitForm-result');
    const resultOutput = resultDiv.querySelector('.result-output');
    let html = '';
    
    if (dataType === 'user') {
        // User profile
        const user = data.success ? data.data : data;
        html = `
            <div class="github-profile">
                <div class="profile-header">
                    <img src="${user.avatar_url}" alt="${user.login}" class="avatar">
                    <div class="profile-info">
                        <h4>${user.name || user.login}</h4>
                        <p class="text-muted">@${user.login}</p>
                        ${user.bio ? `<p>${user.bio}</p>` : ''}
                    </div>
                </div>
                <div class="profile-stats">
                    <div class="stat">
                        <strong>${user.public_repos}</strong>
                        <span>Repositories</span>
                    </div>
                    <div class="stat">
                        <strong>${user.followers}</strong>
                        <span>Followers</span>
                    </div>
                    <div class="stat">
                        <strong>${user.following}</strong>
                        <span>Following</span>
                    </div>
                </div>
                ${user.location ? `<p><i class="bi bi-geo-alt"></i> ${user.location}</p>` : ''}
                ${user.company ? `<p><i class="bi bi-building"></i> ${user.company}</p>` : ''}
                ${user.blog ? `<p><i class="bi bi-link"></i> <a href="${user.blog}" target="_blank">${user.blog}</a></p>` : ''}
                <p><a href="${user.html_url}" target="_blank" class="btn btn-sm btn-primary">View on GitHub</a></p>
            </div>
        `;
    } else if (dataType === 'repos') {
        // Repositories - GitHub API returns array directly
        const repos = Array.isArray(data) ? data : (data.success ? data.data : data);
        if (Array.isArray(repos) && repos.length > 0) {
            html = '<div class="repos-list">';
            repos.slice(0, 10).forEach(repo => {
                html += `
                    <div class="repo-item">
                        <h5><a href="${repo.html_url}" target="_blank">${repo.name}</a></h5>
                        ${repo.description ? `<p class="text-muted">${repo.description}</p>` : ''}
                        <div class="repo-meta">
                            ${repo.language ? `<span class="badge bg-primary">${repo.language}</span>` : ''}
                            <span><i class="bi bi-star"></i> ${repo.stargazers_count}</span>
                            <span><i class="bi bi-diagram-2"></i> ${repo.forks_count}</span>
                        </div>
                    </div>
                `;
            });
            html += '</div>';
            if (repos.length > 10) {
                html += '<p class="text-muted">Showing first 10 repositories...</p>';
            }
        } else {
            html = '<p>No repositories found.</p>';
        }
    } else if (dataType === 'orgs') {
        // Organizations - GitHub API returns array directly
        const orgs = Array.isArray(data) ? data : (data.success ? data.data : data);
        if (Array.isArray(orgs) && orgs.length > 0) {
            html = '<div class="orgs-list">';
            orgs.forEach(org => {
                html += `
                    <div class="org-item">
                        <img src="${org.avatar_url}" alt="${org.login}" class="org-avatar">
                        <div class="org-info">
                            <h5><a href="https://github.com/${org.login}" target="_blank">${org.login}</a></h5>
                            ${org.description ? `<p class="text-muted">${org.description}</p>` : ''}
                        </div>
                    </div>
                `;
            });
            html += '</div>';
        } else {
            html = '<p>No organizations found.</p>';
        }
    }
    
    resultOutput.innerHTML = html;
};

// Quick access functions (global)
window.loadMyProfile = async function() {
    document.getElementById('username').value = 'casjay';
    document.getElementById('dataType').value = 'user';
    await window.fetchGitHubData('casjay', 'user');
}

window.loadMyRepos = async function() {
    document.getElementById('username').value = 'casjay';
    document.getElementById('dataType').value = 'repos';
    await window.fetchGitHubData('casjay', 'repos');
}

window.loadMyOrgs = async function() {
    document.getElementById('username').value = 'casjay';
    document.getElementById('dataType').value = 'orgs';
    await window.fetchGitHubData('casjay', 'orgs');
}
</script>

<style>
.github-profile {
    padding: 1rem;
}

.profile-header {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
}

.avatar {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border: 3px solid var(--purple);
}

.profile-info h4 {
    margin: 0 0 0.5rem 0;
}

.profile-stats {
    display: flex;
    gap: 2rem;
    margin: 1.5rem 0;
    padding: 1rem 0;
    border-top: 1px solid var(--border-color);
    border-bottom: 1px solid var(--border-color);
}

.stat {
    text-align: center;
}

.stat strong {
    display: block;
    font-size: 1.5rem;
    color: var(--purple);
}

.stat span {
    color: var(--text-secondary);
    font-size: 0.875rem;
}

.repos-list, .orgs-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.repo-item {
    padding: 1rem;
    background: var(--bg-secondary);
    border-radius: var(--radius-md);
    border: 1px solid var(--border-color);
}

.repo-item h5 {
    margin: 0 0 0.5rem 0;
}

.repo-item a {
    color: var(--purple);
    text-decoration: none;
}

.repo-item a:hover {
    text-decoration: underline;
}

.repo-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-top: 0.5rem;
}

.org-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: var(--bg-secondary);
    border-radius: var(--radius-md);
}

.org-avatar {
    width: 50px;
    height: 50px;
    border-radius: var(--radius-md);
}

.org-info h5 {
    margin: 0 0 0.25rem 0;
}

.org-info a {
    color: var(--purple);
    text-decoration: none;
}
</style>