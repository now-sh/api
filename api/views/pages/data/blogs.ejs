<div class="hero fade-in">
    <h1>My Blog Posts</h1>
    <p class="lead">View blog posts from GitHub repositories</p>
</div>

<div class="row">
    <div class="col-md-8 mx-auto">
        <div class="card">
            <h2 class="card-title">Blog Source</h2>
            <p class="card-text">Load blog posts from a GitHub repository</p>
            
            <form id="blogForm" class="api-form">
                <div class="form-group">
                    <label for="source" class="form-label">Select Source</label>
                    <select class="form-control" id="source" name="source">
                        <option value="">Select a source...</option>
                        <option value="casjay">My Blog (malaks-us/jason)</option>
                        <option value="custom">Custom Repository</option>
                    </select>
                </div>
                
                <div id="customRepo" style="display: none;">
                    <div class="form-group">
                        <label for="user" class="form-label">GitHub User</label>
                        <input type="text" class="form-control" id="user" name="user" placeholder="username">
                    </div>
                    <div class="form-group">
                        <label for="repo" class="form-label">Repository Name</label>
                        <input type="text" class="form-control" id="repo" name="repo" placeholder="repository">
                    </div>
                </div>
                
                <button type="submit" class="btn btn-primary">Load Blog Posts</button>
            </form>
            
            <div class="result-container mt-6">
                <h3>Blog Posts</h3>
                <% if (typeof blogData !== 'undefined' && blogData && blogData.posts) { %>
                    <div class="text-muted mb-3">Found <%= blogData.total_posts || blogData.posts.length %> blog posts</div>
                    <div class="blog-posts">
                        <% blogData.posts.slice(0, 20).forEach(post => { %>
                            <div class="blog-post">
                                <h5><a href="<%= post.url || post.html_url %>" target="_blank"><%= post.title || post.name %></a></h5>
                                <div class="meta">
                                    <span>üìÖ <%= post.date || 'No date' %></span>
                                    <% if (post.author) { %><span>üë§ <%= post.author %></span><% } %>
                                    <% if (post.categories && post.categories.length > 0) { %>
                                        <span>üè∑Ô∏è <%= post.categories.join(', ') %></span>
                                    <% } %>
                                </div>
                                <% if (post.excerpt || post.description) { %>
                                    <div class="blog-excerpt"><%= post.excerpt || post.description %></div>
                                <% } %>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="text-muted mb-3">Found 0 blog posts</div>
                    <div class="empty-state">No blog posts found</div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<style>
.blog-post {
    border: 1px solid var(--border-color);
    padding: 1.5rem;
    margin-bottom: 1rem;
    border-radius: var(--radius-md);
    background-color: var(--bg-secondary);
    transition: all 0.2s ease;
}

.blog-post:hover {
    border-color: var(--purple);
    transform: translateY(-2px);
}

.blog-post h5 {
    margin-bottom: 0.75rem;
    color: var(--purple);
}

.blog-post h5 a {
    color: inherit;
    text-decoration: none;
}

.blog-post h5 a:hover {
    color: var(--cyan);
}

.blog-post .meta {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin-bottom: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.blog-post .meta > * {
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

.blog-post .meta .date {
    font-weight: 600;
    color: var(--cyan);
}

.blog-post .meta .tags,
.blog-post .meta .categories {
    display: inline-flex;
    gap: 0.5rem;
}

.blog-post .meta .tag,
.blog-post .meta .category {
    background: var(--bg-primary);
    color: var(--text-primary);
    padding: 0.25rem 0.75rem;
    border-radius: var(--radius-sm);
    font-size: 0.8rem;
    border: 1px solid var(--border-color);
}

.blog-post .content {
    margin-top: 1rem;
    color: var(--text-primary);
    line-height: 1.6;
}

.blog-post .excerpt {
    margin-bottom: 1rem;
}

.blog-post .read-more {
    color: var(--cyan);
    cursor: pointer;
    font-size: 0.875rem;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
}

.blog-post .read-more:hover {
    color: var(--purple);
}

.blog-post .full-content {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
    max-height: 400px;
    overflow-y: auto;
    display: none;
}

.blog-post .full-content.show {
    display: block;
}

.loading {
    text-align: center;
    padding: 2rem;
    color: var(--cyan);
}

.error {
    text-align: center;
    padding: 2rem;
    color: var(--red);
}

.empty-state {
    text-align: center;
    padding: 3rem;
    color: var(--text-secondary);
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('blogForm');
    const sourceSelect = document.getElementById('source');
    const customRepoDiv = document.getElementById('customRepo');
    const resultDiv = document.getElementById('blogForm-result');
    const blogPostsDiv = document.getElementById('blogPosts');
    const blogCountDiv = document.getElementById('blogCount');
    
    // Toggle custom repo fields
    sourceSelect.addEventListener('change', function() {
        customRepoDiv.style.display = this.value === 'custom' ? 'block' : 'none';
    });
    
    // Form submission
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        if (!sourceSelect.value) {
            blogPostsDiv.innerHTML = '<div class="error">Please select a source</div>';
            resultDiv.style.display = 'block';
            return;
        }
        
        if (sourceSelect.value === 'custom') {
            const user = document.getElementById('user').value.trim();
            const repo = document.getElementById('repo').value.trim();
            
            if (!user || !repo) {
                blogPostsDiv.innerHTML = '<div class="error">Please enter both username and repository name</div>';
                resultDiv.style.display = 'block';
                return;
            }
            
            await loadBlogPosts(user, repo, false);
        } else if (sourceSelect.value === 'casjay') {
            // Use the personal blog endpoint
            await loadBlogPosts(null, null, true);
        }
    });
    
    // Load blog posts
    async function loadBlogPosts(user, repo, isPersonal = false) {
        blogPostsDiv.innerHTML = '<div class="loading">Loading blog posts...</div>';
        resultDiv.style.display = 'block';
        
        try {
            let response;
            
            if (isPersonal) {
                // Use data blogs endpoint
                response = await fetch('/api/v1/data/blogs/list');
            } else {
                // Use social blogs endpoint
                response = await fetch(`/api/v1/social/blogs/${user}/${repo}/posts`);
            }
            
            if (response.ok) {
                const data = await response.json();
                let posts;
                
                if (isPersonal) {
                    // Personal blog endpoint returns posts in data.posts
                    posts = data.posts || [];
                } else {
                    // Social blogs endpoint returns array directly
                    posts = data.success ? data.data : data;
                }
                
                displayBlogPosts(posts);
                
                // Update count
                const count = Array.isArray(posts) ? posts.length : 0;
                document.getElementById('blogCount').textContent = `Found ${count} blog post${count !== 1 ? 's' : ''}`;
            } else {
                blogPostsDiv.innerHTML = '<div class="error">Failed to load blog posts</div>';
            }
        } catch (error) {
            console.error('Error loading blog posts:', error);
            blogPostsDiv.innerHTML = '<div class="error">Error loading blog posts</div>';
        }
    }
    
    // Display blog posts
    function displayBlogPosts(posts) {
        if (!posts || posts.length === 0) {
            blogPostsDiv.innerHTML = '<div class="empty-state">No blog posts found</div>';
            blogCountDiv.textContent = '';
            return;
        }
        
        blogCountDiv.textContent = `Found ${posts.length} posts`;
        
        const html = posts.map((post, index) => `
            <article class="blog-post">
                <h5><a href="${post.url || '#'}" target="_blank">${post.title || 'Untitled Post'}</a></h5>
                <div class="meta">
                    ${post.date ? `<span class="date"><i class="bi bi-calendar3"></i> ${formatDate(post.date)}</span>` : ''}
                    ${post.author ? `<span class="author"><i class="bi bi-person"></i> ${post.author}</span>` : ''}
                    ${post.tags && post.tags.length > 0 ? `
                        <span class="tags">
                            <i class="bi bi-tags"></i>
                            ${post.tags.map(tag => `<span class="tag">${tag}</span>`).join('')}
                        </span>
                    ` : ''}
                </div>
                <div class="content">
                    <div class="excerpt">
                        ${post.excerpt || post.content?.substring(0, 200) + '...' || 'No content available'}
                    </div>
                    ${post.content && post.content.length > 200 ? `
                        <a class="read-more" onclick="toggleContent(${index})">
                            Read more <i class="bi bi-chevron-down"></i>
                        </a>
                        <div id="content-${index}" class="full-content">
                            ${post.content}
                        </div>
                    ` : ''}
                </div>
            </article>
        `).join('');
        
        blogPostsDiv.innerHTML = html;
    }
    
    
    // Format date
    function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
    }
    
    // Do not load any default blog
});

// Toggle full content
function toggleContent(index) {
    const contentDiv = document.getElementById(`content-${index}`);
    const readMoreLink = event.target;
    
    if (contentDiv.classList.contains('show')) {
        contentDiv.classList.remove('show');
        readMoreLink.innerHTML = 'Read more <i class="bi bi-chevron-down"></i>';
    } else {
        contentDiv.classList.add('show');
        readMoreLink.innerHTML = 'Read less <i class="bi bi-chevron-up"></i>';
    }
}
</script>