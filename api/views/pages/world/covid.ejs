<div class="hero fade-in">
    <h1>ü¶† COVID-19 Statistics Hub</h1>
    <p class="lead">Choose your region to view detailed COVID-19 pandemic statistics</p>
</div>

<div class="row">
    <div class="col-md-10 mx-auto">
        <div class="covid-regions">
            <div class="region-card" onclick="location.href='/world/covid-global'">
                <div class="region-icon">üåç</div>
                <h3>Global Statistics</h3>
                <p>Worldwide pandemic data and most affected countries</p>
                <div class="region-arrow">‚Üí</div>
            </div>
            
            <div class="region-card" onclick="location.href='/world/covid-usa'">
                <div class="region-icon">üá∫üá∏</div>
                <h3>United States</h3>
                <p>USA national data and state-by-state breakdown</p>
                <div class="region-arrow">‚Üí</div>
            </div>
            
            <div class="region-card" onclick="location.href='/world/covid-nys'">
                <div class="region-icon">üóΩ</div>
                <h3>New York State</h3>
                <p>NYS specific data and county-level statistics</p>
                <div class="region-arrow">‚Üí</div>
            </div>
        </div>
        
        <!-- Quick Global Summary -->
        <div class="card mt-4">
            <h2 class="card-title">üìä Quick Global Overview</h2>
            <div id="quickStats" class="quick-stats">
                <div class="loading">Loading quick statistics...</div>
            </div>
        </div>
    </div>
</div>

<style>
.covid-regions {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
}

.region-card {
    background: linear-gradient(135deg, var(--bg-secondary) 0%, rgba(139, 69, 233, 0.05) 100%);
    padding: 2rem;
    border-radius: var(--radius-lg);
    border: 2px solid var(--border-color);
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.region-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--purple), var(--cyan), var(--pink));
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.region-card:hover {
    transform: translateY(-8px) scale(1.02);
    border-color: var(--purple);
    box-shadow: 0 15px 40px rgba(139, 69, 233, 0.3);
}

.region-card:hover::before {
    transform: scaleX(1);
}

.region-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
}

.region-card h3 {
    color: var(--purple);
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
}

.region-card p {
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
    line-height: 1.5;
}

.region-arrow {
    font-size: 1.5rem;
    color: var(--cyan);
    font-weight: bold;
    opacity: 0;
    transform: translateX(-10px);
    transition: all 0.3s ease;
}

.region-card:hover .region-arrow {
    opacity: 1;
    transform: translateX(0);
}

.quick-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
}

.quick-stat {
    background: var(--bg-secondary);
    padding: 1.5rem;
    border-radius: var(--radius-md);
    border: 1px solid var(--border-color);
    text-align: center;
    transition: all 0.2s ease;
}

.quick-stat:hover {
    transform: translateY(-2px);
    border-color: var(--purple);
}

.quick-number {
    font-size: 2rem;
    font-weight: 700;
    color: var(--purple);
    margin-bottom: 0.5rem;
    font-family: 'Monaco', 'Consolas', monospace;
}

.quick-label {
    color: var(--text-secondary);
    font-size: 0.9rem;
    text-transform: uppercase;
    font-weight: 500;
}

.loading, .error {
    text-align: center;
    padding: 2rem;
    color: var(--text-secondary);
}

.error {
    color: var(--red);
}
</style>

<script>
document.addEventListener('DOMContentLoaded', async function() {
    await loadQuickStats();
});

async function loadQuickStats() {
    const quickDiv = document.getElementById('quickStats');
    
    try {
        const response = await fetch('/api/v1/world/covid');
        const data = await response.json();
        
        if (data.global) {
            const stats = data.global;
            quickDiv.innerHTML = `
                <div class="quick-stat">
                    <div class="quick-number">${formatNumber(stats.cases)}</div>
                    <div class="quick-label">üò∑ Global Cases</div>
                </div>
                <div class="quick-stat">
                    <div class="quick-number">${formatNumber(stats.deaths)}</div>
                    <div class="quick-label">üíÄ Deaths</div>
                </div>
                <div class="quick-stat">
                    <div class="quick-number">${formatNumber(stats.recovered)}</div>
                    <div class="quick-label">üíö Recovered</div>
                </div>
                <div class="quick-stat">
                    <div class="quick-number">${formatNumber(stats.active)}</div>
                    <div class="quick-label">üè• Active</div>
                </div>
            `;
        } else {
            quickDiv.innerHTML = '<div class="error">Unable to load quick statistics</div>';
        }
    } catch (error) {
        quickDiv.innerHTML = '<div class="error">Error loading quick statistics</div>';
    }
}

function formatNumber(num) {
    if (!num) return '0';
    return new Intl.NumberFormat().format(num);
}
</script>