<div class="hero fade-in">
    <h1>UUID Generator</h1>
    <p class="lead">Generate universally unique identifiers (UUIDs)</p>
</div>

<div class="card">
    <h2 class="card-title">Generate UUID v4</h2>
    <p class="card-text mb-4">Click the button to generate a new UUID v4</p>
    
    <div class="text-center">
        <div id="uuid-display" class="mb-4">
            <code class="uuid-result">
                <% if (typeof toolResult !== 'undefined' && toolResult && toolResult.data) { %>
                    <%= toolResult.data.uuid %>
                <% } else { %>
                    Click generate to create a UUID
                <% } %>
            </code>
        </div>
        
        <form method="POST" action="/utilities/uuid" class="d-inline">
            <input type="hidden" name="action" value="generate">
            <button type="submit" class="btn btn-primary">Generate New UUID</button>
        </form>
        
        <% if (typeof toolResult !== 'undefined' && toolResult && toolResult.data) { %>
            <button onclick="copyToClipboard('<%= toolResult.data.uuid %>')" class="btn btn-secondary">
                Copy to Clipboard
            </button>
        <% } %>
        
        <div class="mt-6">
            <h3 class="mb-3">Batch Generation</h3>
            <form id="batchForm" class="form-inline" style="max-width: 400px; margin: 0 auto;">
                <div class="form-group">
                    <label for="count" class="form-label">Number of UUIDs</label>
                    <input type="number" id="count" name="count" min="1" max="100" value="" class="form-control" required>
                </div>
                <div class="form-check mt-3">
                    <input type="checkbox" id="uppercase" name="uppercase" class="form-check-input">
                    <label for="uppercase" class="form-check-label">Uppercase</label>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Generate Batch</button>
            </form>
        </div>
    </div>
    
    <div id="batch-result" class="result-container mt-6" style="display: none;">
        <h3 class="mb-3">Generated UUIDs:</h3>
        <pre class="result-output"></pre>
        <button class="btn btn-sm copy-btn mt-2" onclick="copyBatchResults()">Copy All</button>
    </div>
</div>

<div class="card mt-4">
    <h3 class="card-title">UUID Validation</h3>
    <p class="card-text mb-4">Check if a string is a valid UUID</p>
    
    <form id="validateForm" class="api-form">
        <div class="form-group">
            <label for="uuidInput" class="form-label">UUID to Validate</label>
            <input 
                type="text" 
                id="uuidInput" 
                name="uuid" 
                class="form-control" 
                placeholder="e.g., 550e8400-e29b-41d4-a716-446655440000"
                required
            >
        </div>
        <button type="submit" class="btn btn-primary">Validate UUID</button>
    </form>
    
    <div id="validate-result" class="result-container mt-4" style="display: none;">
        <div class="result-output"></div>
    </div>
</div>

<div class="card mt-4">
    <h3 class="card-title">API Usage</h3>
    <div class="code-block">
        <h4>Generate UUID v4:</h4>
        <pre><code>curl -q -LSsf <%= baseUrl %>/api/v1/tools/uuid/v4</code></pre>
    </div>
    
    <div class="code-block">
        <h4>Generate multiple UUIDs:</h4>
        <pre><code>curl -q -LSsf <%= baseUrl %>/api/v1/tools/uuid/generate/5</code></pre>
    </div>
    
    <div class="code-block">
        <h4>Validate UUID:</h4>
        <pre><code>curl -q -LSsf <%= baseUrl %>/api/v1/tools/uuid/validate/550e8400-e29b-41d4-a716-446655440000</code></pre>
    </div>
</div>

<style>
.uuid-result {
    display: inline-block;
    background-color: var(--bg-secondary);
    color: var(--yellow);
    padding: 1rem 2rem;
    border-radius: var(--radius-md);
    font-family: 'Monaco', 'Consolas', monospace;
    font-size: 1.25rem;
    user-select: all;
    cursor: pointer;
    transition: all 0.2s ease;
    border: 1px solid transparent;
}

.uuid-result:hover {
    border-color: var(--yellow);
    transform: translateY(-1px);
}

.uuid-result.success {
    color: var(--green);
    border-color: var(--green);
    animation: fadeIn 0.3s ease;
}

.form-inline {
    text-align: center;
}

.form-check {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}

.form-check-input {
    width: 1.2rem;
    height: 1.2rem;
    cursor: pointer;
}

.validation-result {
    padding: 1rem;
    border-radius: var(--radius-md);
    text-align: center;
    font-weight: 600;
}

.validation-result.valid {
    background: rgba(80, 250, 123, 0.1);
    color: var(--green);
    border: 1px solid var(--green);
}

.validation-result.invalid {
    background: rgba(255, 85, 85, 0.1);
    color: var(--red);
    border: 1px solid var(--red);
}

@keyframes fadeIn {
    from { opacity: 0; transform: scale(0.95); }
    to { opacity: 1; transform: scale(1); }
}
</style>

<script>
function copyToClipboard(text) {
    if (navigator.clipboard) {
        navigator.clipboard.writeText(text).then(() => {
            alert('Copied: ' + text);
        });
    } else {
        const textarea = document.createElement('textarea');
        textarea.value = text;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);
        alert('Copied: ' + text);
    }
}
</script>

<style>
.toast-notification {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    background: var(--purple);
    color: var(--background);
    padding: 0.75rem 1.5rem;
    border-radius: var(--radius-md);
    opacity: 0;
    transform: translateY(1rem);
    transition: all 0.3s ease;
    z-index: 1000;
}

.toast-notification.show {
    opacity: 1;
    transform: translateY(0);
}
</style>

