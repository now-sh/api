<div class="hero fade-in">
    <h1>üìä API Version & Status</h1>
    <p class="lead">Complete API version information and system status</p>
</div>

<div class="row">
    <div class="col-md-10 mx-auto">
        <!-- Greeting Banner -->
        <% if (typeof versionData !== 'undefined' && versionData && versionData.Greetings) { %>
            <div class="greeting-banner mb-4">
                <%= versionData.Greetings %>
            </div>
        <% } %>

        <!-- API Version Information -->
        <div class="card mb-4">
            <h2 class="card-title">üîñ Version Information</h2>
            <div class="version-info">
                <% if (typeof versionData !== 'undefined' && versionData) { %>
                    <div class="info-grid">
                        <div class="info-item">
                            <span class="info-label">API Version</span>
                            <span class="info-value"><%= versionData.Version || 'Unknown' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Time Zone</span>
                            <span class="info-value"><%= versionData.TimeZone || 'Unknown' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Current Time</span>
                            <span class="info-value"><%= versionData.Time || 'Unknown' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Today</span>
                            <span class="info-value"><%= versionData.Today || 'Unknown' %></span>
                        </div>
                    </div>
                <% } else { %>
                    <div class="error-message">Unable to load version information</div>
                <% } %>
            </div>
        </div>

        <!-- Authentication Status -->
        <div class="card mb-4">
            <h2 class="card-title">üîê Authentication Status</h2>
            <div class="auth-status">
                <% if (typeof versionData !== 'undefined' && versionData) { %>
                    <div class="info-grid">
                        <div class="info-item">
                            <span class="info-label">Authentication</span>
                            <span class="info-value <%= versionData.Auth === 'yes' ? 'success' : 'warning' %>"><%= versionData.Auth || 'Unknown' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">GitHub Token</span>
                            <span class="info-value <%= versionData.GitHubToken ? 'success' : 'error' %>"><%= versionData.GitHubToken || 'Not Set' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Reddit Auth</span>
                            <span class="info-value <%= versionData.RedditAuth === 'Set and Valid' ? 'success' : 'error' %>"><%= versionData.RedditAuth || 'Not Set' %></span>
                        </div>
                    </div>
                <% } else { %>
                    <div class="error-message">Unable to load authentication status</div>
                <% } %>
            </div>
        </div>

        <!-- Health Status -->
        <div class="card mb-4">
            <h2 class="card-title">üè• Health Status</h2>
            <div class="health-status">
                <% if (typeof versionData !== 'undefined' && versionData && versionData.Health) { %>
                    <div class="status-indicator <%= versionData.Health.Status === 'healthy' ? 'success' : 'warning' %>">
                        <span class="status-dot"></span>
                        <span class="status-text"><%= versionData.Health.Status %></span>
                    </div>
                    <div class="info-item mt-3">
                        <span class="info-label">Issues</span>
                        <span class="info-value"><%= versionData.Health.Issues?.length || 0 %> issues</span>
                    </div>
                <% } else { %>
                    <div class="error-message">Health information not available</div>
                <% } %>
            </div>
        </div>

        <!-- Database Status -->
        <div class="card mb-4">
            <h2 class="card-title">üóÑÔ∏è Database Status</h2>
            <div class="database-status">
                <% if (typeof versionData !== 'undefined' && versionData && versionData.Database) { %>
                    <div class="status-indicator <%= versionData.Database.Status === 'Connected' ? 'success' : 'error' %>">
                        <span class="status-dot"></span>
                        <span class="status-text"><%= versionData.Database.Status %></span>
                    </div>
                    <% if (versionData.Database.Details) { %>
                        <div class="info-item mt-3">
                            <span class="info-label">State</span>
                            <span class="info-value"><%= versionData.Database.Details.State %></span>
                        </div>
                    <% } %>
                <% } else { %>
                    <div class="error-message">Database information not available</div>
                <% } %>
            </div>
        </div>

        <!-- Environment Information -->
        <div class="card mb-4">
            <h2 class="card-title">üåç Environment</h2>
            <div class="environment-info">
                <% if (typeof versionData !== 'undefined' && versionData && versionData.Environment) { %>
                    <div class="info-grid">
                        <div class="info-item">
                            <span class="info-label">Node Environment</span>
                            <span class="info-value"><%= versionData.Environment.NodeEnv || 'Unknown' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Port</span>
                            <span class="info-value"><%= versionData.Environment.Port || 'Unknown' %></span>
                        </div>
                    </div>
                <% } else { %>
                    <div class="error-message">Environment information not available</div>
                <% } %>
            </div>
        </div>

        <!-- System Information -->
        <div class="card mb-4">
            <h2 class="card-title">‚öôÔ∏è System Information</h2>
            <div class="system-info">
                <% if (typeof versionData !== 'undefined' && versionData && versionData.System) { %>
                    <div class="info-grid">
                        <div class="info-item">
                            <span class="info-label">Node Version</span>
                            <span class="info-value"><%= versionData.System.NodeVersion || 'Unknown' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Platform</span>
                            <span class="info-value"><%= versionData.System.Platform || 'Unknown' %></span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Uptime</span>
                            <span class="info-value"><%= versionData.System.Uptime || 'Unknown' %></span>
                        </div>
                        <% if (versionData.System.Memory) { %>
                            <div class="info-item">
                                <span class="info-label">Memory</span>
                                <span class="info-value"><%= versionData.System.Memory.HeapUsed %> / <%= versionData.System.Memory.HeapTotal %></span>
                            </div>
                        <% } %>
                    </div>
                <% } else { %>
                    <div class="error-message">System information not available</div>
                <% } %>
            </div>
        </div>

        <!-- Proxy Configuration -->
        <div class="card mb-4">
            <h2 class="card-title">üîó Proxy Configuration</h2>
            <div class="proxy-config">
                <% if (typeof versionData !== 'undefined' && versionData && versionData.Proxies) { %>
                    <div class="proxy-list">
                        <% Object.entries(versionData.Proxies).forEach(([name, config]) => { %>
                            <div class="proxy-item">
                                <span class="proxy-path"><%= name %></span>
                                <span class="proxy-arrow">‚Üí</span>
                                <span class="proxy-target"><%= config.target || config %></span>
                                <% if (config.status) { %>
                                    <span class="badge bg-success ms-2"><%= config.status %></span>
                                <% } %>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="error-message">Proxy configuration not available</div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- No JavaScript needed - all data rendered server-side -->

<style>
.version-info,
.database-status,
.routes-list,
.proxy-config,
.system-info {
    padding: 1.5rem;
}

.info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
}

.info-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.info-label {
    color: var(--text-secondary);
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.info-value {
    color: var(--text-primary);
    font-size: 1.125rem;
    font-weight: 400;
}

.status-indicator {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.25rem;
    font-weight: 600;
}

.status-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    animation: pulse 2s infinite;
}

.status-indicator.success .status-dot {
    background-color: var(--green);
}

.status-indicator.error .status-dot {
    background-color: var(--red);
}

.status-indicator.warning .status-dot {
    background-color: var(--yellow);
}

.status-indicator.success .status-text {
    color: var(--green);
}

.status-indicator.error .status-text {
    color: var(--red);
}

.status-indicator.warning .status-text {
    color: var(--yellow);
}

.route-category {
    margin-bottom: 2rem;
}

.route-category:last-child {
    margin-bottom: 0;
}

.category-title {
    color: var(--purple);
    font-size: 1.125rem;
    margin-bottom: 1rem;
    font-weight: 600;
}

.route-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 0.75rem;
}

/* Mobile-first responsive */
@media (min-width: 576px) {
    .route-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }
}

@media (min-width: 768px) {
    .route-grid {
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    }
}

.route-item {
    background-color: var(--bg-secondary);
    padding: 0.75rem 1rem;
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-color);
}

.route-item code {
    color: var(--cyan);
    font-size: 0.875rem;
}

.proxy-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.proxy-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    background-color: var(--bg-secondary);
    padding: 1rem;
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-color);
}

.proxy-path {
    color: var(--cyan);
    font-family: 'Monaco', 'Consolas', monospace;
    font-size: 0.875rem;
}

.proxy-arrow {
    color: var(--text-secondary);
}

.proxy-target {
    color: var(--purple);
    font-family: 'Monaco', 'Consolas', monospace;
    font-size: 0.875rem;
}

.no-data {
    text-align: center;
    color: var(--text-secondary);
    padding: 2rem;
    font-style: italic;
}

.greeting-banner {
    background: linear-gradient(135deg, var(--purple) 0%, var(--cyan) 100%);
    color: white;
    padding: 1rem;
    border-radius: var(--radius-md);
    text-align: center;
    margin-top: 1rem;
    font-weight: 600;
}

.info-value.success {
    color: var(--green);
    font-weight: 600;
}

.info-value.error {
    color: var(--red);
    font-weight: 600;
}

.info-value.warning {
    color: var(--yellow);
    font-weight: 600;
}

.error-message {
    text-align: center;
    color: var(--red);
    padding: 2rem;
    font-size: 1.125rem;
}

.error-message i {
    font-size: 1.5rem;
    margin-right: 0.5rem;
}

.loading {
    text-align: center;
    color: var(--cyan);
    padding: 2rem;
    font-size: 1.125rem;
}

@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 currentColor;
    }
    70% {
        box-shadow: 0 0 0 10px transparent;
    }
    100% {
        box-shadow: 0 0 0 0 transparent;
    }
}

@media (max-width: 768px) {
    .info-grid {
        grid-template-columns: 1fr;
    }
    
    .route-grid {
        grid-template-columns: 1fr;
    }
    
    .proxy-item {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }
}
</style>